############################################################
TODO LIST FOR TEMPLATE-RUN_PYTHON_IN_ENV
############################################################

############################################################
important
############################################################

it should abort and warn. maybe make independent from global python for start after venv setup`? anyway not reasonable?
########################################
did not find executable at 'C:\Users\Flo\AppData\Local\Programs\Python\Python313\python.exe': Das System kann die angegebene Datei nicht finden.


 #################################
 Python code finished successfully
 #################################

 Press any key to exit
 ########################################

make settings in non-user settings relative to it. ->. make paths absolute in the functions that use imported paths

cant have 2x different programs on taskleiste

have paths relative to non-user settings path?

add code example hwo to merge settings and x symbol over icon via magicked

have settings ontop of batch files

can i have non user settings file in different drive?

add function that relods settings

there is 2 todo lists????

#add a mode to not sync settings. maybe local seetinfgs? like for com port

some make license not trasfer? but still update if someone makes it->maybe remove license?

add pause to failing generate shortcuts

do not transfer license via git?

install needed packages did not work for pyboson

maybe moving to local folder is not needed for setlocal?

do not close if it fuck up main start

problem if log is blocked. force replace blocked log file

make everything that deletes and saves more safe by only allowing .txt for example

add comment to set that escape character like ()& need ^ . or other way to avoid. is "" around everything or around value solujtiopn? explain that relative paths work

add full path and stop if not generated before continuing:
Error: ..\..\..\tmp.txt does not exist. Press any key to exit

make a shortcut helper file which catches all errors and deletes if non?
or maye launch them with /K and only finsh in end if no errorlevel

auto kill last process? probably not. make a non-user setting to auto kill previous process. ask? or add to file and make it kill all of them?

no error to log file for error in start_program?

for crashes in batch outer most it closes everyting? maybe somehow avoid with /K instead of /C

make checks if files exist where no error would appear anywhere and leave window open with a warning if no existing

#################################

#popup for crashes . maybe to general hidden function?

add option to copy failed install with opening tmp.txt and manually relax requirements . make pipreqs relaax auto?

[notice] A new release of pip is available: 25.1.1 -> 25.2 for install_packages needed

Make browser Version + start with Lesezeichen 

Make pyqt5 a scroll MenÃ¼ for yaml settings with restart button

No. Confirmation if python finished in gui

Add block of Ctrl c

Add relativ starters?

Python path to nonusersetings

Echo to screen and write to a rotating .log file (with date/time)

class SafeDict(dict):
    def __getitem__(self, key):
        if key not in self:
            return f"Key '{key}' is missing!"
        return super().__getitem__(key)

my_dict = SafeDict({"name": "Alice"})
print(my_dict["name"])  # Alice
print(my_dict["age"])   # Key 'age' is missing!

Add just a Code line to start batch as a setting 

Add Syntax Checker to git and even linting?

Add local gitignores?

Add more default options to do not change 

Change icon in top left corner 

Run terminal in Browser 

Add tabs to terminal 


##############################
For readme
##############################

 explain what everything is and that it has to keep its name
 explain that you could just use poython for settings
 add to notes that you can delete after_python_crash_code.py
 explain fork.... options
explain all advantages/features
explain that it only saves to log file at end

explain that version ..x changes can be updated by replacing do_not_change and should not be breaking
v.xy changes should be breaking something
releases should always be stable
for breaking. explain what needs to be changed to fix.

where it looks for pyron scipts for auto install

############################################################
optional
############################################################

make function:FOR /F "tokens=1,2 delims==" %%a IN ('findstr "^" "%settings_path%"') DO (
	IF %%a==program_name ( SET program_name=%%b)
	IF %%a==restart_main_code_on_crash ( SET restart_main_code_on_crash=%%b)
)

add option to start minimized

Add the .bat or a shortcut to shell:startup. Useful?

option to ignore every ECHO but let python print

add a batch that update git folder. maybe only main and release. maybe propt user and disaply name and changelog(s)

Auto-Generate .gitignore

add startup time or something

Let the script run in "portable" mode where all logs, configs, environments stay in a single folder -> wherever shortcut is placed also print output and let python think it is there

make lightweight interface instead of terminal. maybe as option or only if installed

somehow have an option to get help when having access to shortcut

Check Git remote for updates and prompt user to pull. print at least if new verison available

Enable verbose logging or keep the terminal open on error.

add option to kill previous. maybe even for non hidden

add utilities like replace line in settings

foreward arguemtns to python. maybe even different settings files to switch between

somehow make echo on option switchable

timestamp to log? subfolder?
same for pid?

self updatring from git option?

make somehow git run generator for cloning

Bonus: Change color if there's an error (e.g., red background).

still spam for pip version on new download?
add indicator that environemnt was created and now main code is runs
decrease/importve spam there becasue everyone will see that
make better print because it checks anyway if successfull creation?

why different colors for running?

mabye make ######## more fancy. maybe even color

add github short descripton on right of page

make option to not delete empty log files

make environment batches more into utilities with calls with arguments? need utilizies folder?

generate shrotcut to log output? -> rename functions. Maybe needed becasue taskbar adding?

move helpers i.e. utiliteid into helpers file and maybe rename utilizties and put more utilizies in

mopve output of uopdates to NUL

color in prints or even change normal prints somehow. Must also work with file verison

I guess just a number for max calling of crash handlers with 0 being accepted: adjust message printing
option for not repeat calls of crash scripts? could just retun I guess if receiving arg "crashed". no that does not work since then it gets called 0 times

make kill process also for not hidden?

confirmation question via windows popup?

rename everythong from batch to more generic because it is calling generic 

generate link to settings.py instead if no yaml file and if .py file exists. explain this

check if printing to terminal also possible incremental

add better text:
	ECHO: ##########################
	ECHO: Python crashed (see above^)
	ECHO: ##########################
at least once? in the beginnign?

add some kind of detection that code crashes immediately and that it does not spam repeatedly. or some minimum delay

auto fork option? hm maybe just actually copy via a batch file (new folder and copy (dont overwrite at all), and delete .git, shortcuts ..., dont copy basically stuff in gitignore)
But fork allows for contributing changes back to original template. Git remplate does not but allows for own forking

make pyqt5 interface available and easy to use with example. (threading?)

check if i can add stoppping of closing terminal

allow for non online package installs somehow via req.txt

see where i get errorlevel and if it translateds to parent batch. print different message if errior

do i need python -m pip or not. 
do I need to update pip or python -m

add more emptly print lines between spam

##########################################

add how to copy this folder

add option for yaml install?
auto install yaml? for new generation? 

allow for local package installs somehow via req.txt

add readme in code\ folder   explain what everything is and that it has to keep its name

check if i can add stoppping of closing terminal

make pyqt5 interface available and easy to use with example. (threading?)

auto fork option? hm maybe just actually copy via a batch file (new folder and copy (dont overwrite at all), and delete .git)
But fork allows for contributing changes back to original template. Git remplate does not but allows for own forking

add to notes that you can delete after_python_crash_code.py

have option for a*b^c,a*b^c

add some kind of detection that code crashes immediately and that it does not spam repeatedly. or some minimum delay

is there any use in piping the error of the start batch file for non no-terminal mode

add option to not have any prints from batch files?
remove unnecessary echos if python return -1 ?

add better text:
ECHO: ##########################
	ECHO: Python crashed (see above^)
	ECHO: ##########################
at least once? in the beginnign?

make unicode log output

add comment if or when "" needed or allowed. code expects none

add incremental printing to log file.

add option to log to file aswell while terminal?

test if CALL :handle_python_crash >> %log_path% 2>&1 works recuresively

test if error of batch fowrk for log

make "nopause" required instead of any? for all files

add error log piping to all shortcuts and wherever possible. and code that deletes an empty error file at end of all codes. where to put file? is there a way to put it where it was called? i guess it would not exist either way if not called by shortcuts

need activate env for pipreqs? for correct package version for python version?

rename make_absolute_path_if_relative and use where needed -> normalize_to_abs_path

create terminate_running_program_name if running and delete afterwards? for no-terminal mode

generate link to settings.py if no yaml found. explain that somewhere

move settings.py to do_not_change? link possible? but helper file is allowed to be change actually??? make folder to package such that it can be imported with subfolder path? probably just keep since can be changed and not critical

update yaml fiel to new tamplate

make pyFROG and pyFLIR
