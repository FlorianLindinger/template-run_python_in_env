############################################################
important
############################################################

no terminal -> id generating and deleting after done (this can have error logging of logging output?) -> logging_output -> start_batch
normal;  id generating and deleting after don -> start_batch

add arbitrary num of args to other files

make shortcuts generatoir

auto kill last process? probably not. make a non-user setting to auto kill previous process

make kill process also for not hidden

create terminate_running_program_name if running and delete afterwards? for no-terminal mode

auto install powershell needed?

no error to log file for error in start_program?

for crashes in batch outer most it closes everyting? maybe somehow avoid with /K instead of /C

force replace blocked log file

fix log file not allowing spaces

##############################
For readme
##############################

 explain what everything is and that it has to keep its name
 explain that you could just use poython for settings
 add to notes that you can delete after_python_crash_code.py
 explain fork.... options
explain all advantages/features
explain that it only saves to log file at end


##############################
For all batch files:
##############################


make checks if files exist where no error would appear anywhere and leave window open with a warning if no existing

check if needed and update to new comments
	@REM function that makes path to absolute if not already. Access as %OUTPUT% (also gets rid of unresolved ".." in path):
	:make_absolute_path_if_relative
		SET OUTPUT=%~f1
		EXIT /B


############################################################
optional
############################################################

generate link to settings.py instead if no yaml file and if .py file exists. explain this

add incremental printing to log file. check if printing to terminal also possible then
check if option to save line whenever appears in terminal as a log works

add better text:
	ECHO: ##########################
	ECHO: Python crashed (see above^)
	ECHO: ##########################
at least once? in the beginnign?

add some kind of detection that code crashes immediately and that it does not spam repeatedly. or some minimum delay

auto fork option? hm maybe just actually copy via a batch file (new folder and copy (dont overwrite at all), and delete .git, shortcuts ..., dont copy basically stuff in gitignore)
But fork allows for contributing changes back to original template. Git remplate does not but allows for own forking

make pyqt5 interface available and easy to use with example. (threading?)

check if i can add stoppping of closing terminal

allow for non online package installs somehow via req.txt

see where i get errorlevel and if it translateds to parent batch. print different message if errior

do i need python -m pip or not. 
do I need to update pip or python -m

